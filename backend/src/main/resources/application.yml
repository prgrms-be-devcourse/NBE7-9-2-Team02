spring:
  config:
    import: optional:file:.env.properties
  profiles:
    active: dev
  output:
    ansi:
      enabled: always

  # --- Datasource / JPA ---
  datasource:
    hikari:
      auto-commit: false

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.MySQL8Dialect
    show-sql: true

  # --- Web / MVC ---
  mvc:
    hiddenmethod:
      filter:
        enabled: true
  web:
    resources:
      static-locations:
        - classpath:/static/
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  # OAuth 2.0 설정 추가
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

  # Redis 설정 추가
  data:
    redis:
      host: localhost
      port: 6379
      # password: ${REDIS_PASSWORD}  # 비밀번호 설정 시 사용

  # --- RabbitMQ 설정 추가 ---
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

# --- 파일 업로드 ---
file:
  upload-dir: uploads/designs
  public-prefix: /files

# --- Springdoc ---
springdoc:
  default-produces-media-type: application/json

# --- Logging ---
logging:
  level:
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE
    com.rest1: DEBUG

    org.springframework.security: DEBUG
    org.springframework.security.oauth2: TRACE
    org.springframework.web: DEBUG

# --- Custom JWT 설정 ---
custom:
  jwt:
    # Refresh Token 만료 시간 추가
    accessTokenExpireSeconds: 1800 #{30 * 60} 30분
    refreshTokenExpireSeconds: 604800 #{7 * 24 * 60 * 60} 7일
    secretKey: ${JWT_SECRET_KEY}  # 환경 변수로 관리

# --- 프론트엔드 URL 설정 ---
frontend:
  url: ${FRONT_URL} # 개발 환경
  # url: https://www.myapp.com  # 프로덕션 환경