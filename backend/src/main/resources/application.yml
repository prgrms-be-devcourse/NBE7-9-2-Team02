spring:
  config:
    import: optional:file:.env.properties
  profiles:
    active: dev
  output:
    ansi:
      enabled: always
  datasource:
    hikari:
      auto-commit: false
  jpa:
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
    hibernate:
      ddl-auto: create
    show-sql: true
  mvc:
    hiddenmethod:
      filter:
        enabled: true
  web:
    resources:
      static-locations:
        - classpath:/static/

  # ✅ OAuth 2.0 설정 추가
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

  # ✅ Redis 설정 추가
  data:
    redis:
      host: localhost
      port: 6379
      # password: ${REDIS_PASSWORD}  # 비밀번호 설정 시 사용

springdoc:
  default-produces-media-type: application/json

logging:
  level:
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE
    com.rest1: DEBUG

custom:
  jwt:
    # ✅ Refresh Token 만료 시간 추가
    accessTokenExpireSeconds: "#{15 * 60}"  # 15분
    refreshTokenExpireSeconds: "#{7 * 24 * 60 * 60}"  # 7일
    secretKey: ${JWT_SECRET_KEY}  # 환경 변수로 관리
